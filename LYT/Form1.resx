<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAHV1dRh1dXU+dXV1UnV1dVJ1dXU+dXV1GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAdXV1KHR0dI11dXXddXV1/3V1df91dXX/dXV1/3V1df91dXX/dXV13XV1dY11dXUmAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAdXV1GHV1daN1dXX9dXV1/3V1df91dXX/dXV1/3V1df91dXX/dXV1/3V1df91dXX/dXV1/3V1
        df11dXWjdXV1GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAHV1dUh1dXXtdXV1/3V1df91dXX/dXV16XV1daN1dXVydXV1WnV1dVp1dXVydXV1o3V1
        det1dXX/dXV1/3V1df91dXXrdXV1RgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        P7/+AD///wA////AP///+D////////////8=
</value>
  </data>
</root>